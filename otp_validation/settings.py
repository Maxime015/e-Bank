"""
Django settings for otp_validation project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
from decouple import config, Csv
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n9z7m@y8)f31h7=qgw@qgjj-qp&ndr%$l%t0axl^9s*_m5qob%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True


ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'otp_app.apps.OtpAppConfig',
    'bootstrap4',
    
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.github',
    'allauth.socialaccount.providers.facebook',
    
    "crispy_forms",
    "crispy_bootstrap4",
    'channels',
    'chartjs',
    
]

CRISPY_TEMPLATE_PACK = "bootstrap4"

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

SITE_ID = 1


LOGIN_REDIRECT_URL = 'profile/'

ACCOUNT_LOGOUT_REDIRECT_URL ='/accounts/login'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

ACCOUNT_EMAIL_REQUIRED = True

SOCIALACCOUNT_QUERY_EMAIL = True

ACCOUNT_SESSION_REMEMBER = True

SOCIALACCOUNT_LOGIN_ON_GET=True

SOCIALACCOUNT_AUTO_SIGNUP = True


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    # Add the account middleware:
    "allauth.account.middleware.AccountMiddleware",
]



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # `allauth` needs this from django
                'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'otp_validation.wsgi.application'





#Social login settings

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}


# Configuration des bases de données
# Documentation : https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    # Base de données principale (MySQL)
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'ebank',                # Nom de la base de données
        'USER': 'root',                 # Nom d'utilisateur MySQL
        'PASSWORD': '',                 # Mot de passe (laisser vide si aucun mot de passe)
        'HOST': '127.0.0.1',            # Adresse du serveur (localhost)
        'PORT': '3306',                 # Port MySQL
        'OPTIONS': {
            'charset': 'utf8mb4',
            'init_command': (
                "SET default_storage_engine=INNODB; "  # Définit le moteur de stockage
                "SET sql_mode='STRICT_TRANS_TABLES'; "  # Mode SQL strict
                "SET innodb_large_prefix=1;"           # Préfixes larges pour les index
            ),
        },
    },

    # Deuxième base de données (PostgreSQL)
    'enigma': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'ebank',                # Nom de la base de données
        'USER': 'postgres',             # Nom d'utilisateur PostgreSQL
        'PASSWORD': 'root',             # Mot de passe PostgreSQL
        'HOST': '127.0.0.1',            # Adresse du serveur (localhost)
        'PORT': 5432,                   # Port PostgreSQL
        'OPTIONS': {
             'charset': 'utf8mb4',        # Encodage UTF-8 (bien que PostgreSQL utilise UTF-8 par défaut)
        },
    },

    # Troisième base de données (SQLite)
    'scarface': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'ebank.sqlite3',  # Fichier SQLite dans le répertoire BASE_DIR
        'OPTIONS': {
            'timeout': 20,             # Timeout en secondes
             'charset': 'utf8mb4',       # Encodage UTF-8 (pas strictement nécessaire pour SQLite)
        },
    },
}

# Temps de conservation de la connexion pour MySQL (20 secondes)
DATABASES['default']['CONN_MAX_AGE'] = 20



# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'otp_app/static'),
]

LOGIN_URL = 'signin'


# Media files (Uploaded by users)
# https://docs.djangoproject.com/en/4.2/topics/files/

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')


# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'otp_app.CustomUser'

ROOT_URLCONF = 'otp_validation.urls'

# Email settings
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'maximeananivi@gmail.com'
EMAIL_HOST_PASSWORD = 'jbna zesn kilb maew'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_SSL = False 

from decouple import config

# DEBUG = config('DEBUG', default=False, cast=bool)

# if DEBUG:
#     TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID_DEV')
#     TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN_DEV')
#     TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER_DEV')
# else:
TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID_PROD')
TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN_PROD')
TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER_PROD')



MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',  # 'danger' corresponds to Bootstrap's alert-danger
}

DOMAIN = 'http://localhost:8000'

# 74408222347-cpd99i9i0iknipqb3i2hun346jfkhi60.apps.googleusercontent.com

# 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

